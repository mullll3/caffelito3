import logging
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import Command
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from keep_alive import keep_alive
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token='6672188160:AAHL3sAEhzgJc2nIHISmv6aasqzsU8vuZMA')
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –æ–±—â—É—é –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"
back_button = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
back_button2 = types.KeyboardButton("–ù–∞–∑–∞–¥")

# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è", state="*")
async def handle_back(message: types.Message, state: FSMContext):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await handle_menu(message)

@dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥", state="*")
async def handle_back2(message: types.Message, state: FSMContext):
    await state.finish()  # Reset the state to None
    await start(message, state)
# –°–ø–∏—Å–æ–∫ chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
admin_chat_ids = [6778318047, 5773503802, 141839443, 6715652826, 1692177453]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
def has_access(message: types.Message):
    return message.from_user.id in admin_chat_ids

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'], state='*')
async def start(message: types.Message, state: FSMContext):
    await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    if has_access(message):
        # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏
        with open('assets/images/start/start.jpg', 'rb') as photo:
            await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="""<b>–ü—Ä–∏–≤–µ—Ç !\n–£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ ? –Ø –ë–û–¢-–ü–û–ú–û–©–ù–ò–ö. –ü–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –Ω–∞–ø–∏—Ç–∫–∞ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –≤–∏–¥–µ–æ.</b>üôå""",
                                 parse_mode='HTML', reply_markup=types.ReplyKeyboardMarkup(
                keyboard=[
                    [types.KeyboardButton("–ú–µ–Ω—é")],
                    [types.KeyboardButton("–°–≤–µ–∂–µ–æ–±–∂–∞—Ä–µ–Ω–Ω—ã–π –∫–æ—Ñ–µ"), types.KeyboardButton("–†–µ—Ü–µ–ø—Ç—ã —Å—ç–Ω–¥–≤–∏—á–µ–π")],
                    [types.KeyboardButton("–Ø –±–∞—Ä–∏—Å—Ç–∞")]
                ],
                resize_keyboard=True
            ))
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
        await bot.send_message(chat_id=message.chat.id, text="<b>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</b>",parse_mode='HTML')

@dp.message_handler(lambda message: message.text == "–Ø –±–∞—Ä–∏—Å—Ç–∞")
async def handle_barista_menu(message: types.Message):
   await message.answer('https://disk.yandex.ru/d/ayyLe_-Z04b6hw')



@dp.message_handler(lambda message: message.text == "–ú–µ–Ω—é")
async def handle_menu(message: types.Message):
    with open('assets/images/start/start.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é !",
                             parse_mode='HTML', reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton("–ö–æ—Ñ–µ ü•§"), types.KeyboardButton("–ù–∞–ø–∏—Ç–∫–∏ üßã"), types.KeyboardButton("–ß–∞–π üçµ")],
                [types.KeyboardButton("–ó–∞–≥–æ—Ç–æ–≤–∫–∏ üî™"), types.KeyboardButton("–°–µ–∑–æ–Ω–Ω–æ–µ –º–µ–Ω—é üî•")],
                [back_button2]
            ],
            resize_keyboard=True
        ))

@dp.message_handler(lambda message: message.text == "–°–µ–∑–æ–Ω–Ω–æ–µ –º–µ–Ω—é üî•")
async def handle_sezon_menu(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("–ú–æ–∫–∫–æ-–ú–∏–Ω—Ç"),types.KeyboardButton("–õ–∞—Ç—Ç–µ –•–∞–ª–≤–∞")],
            [types.KeyboardButton("–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π –†–∞—Ñ"),types.KeyboardButton("–õ–∞—Ç—Ç–µ –§–∏—Å—Ç–∞—à–∫–∞")],
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "–ú–æ–∫–∫–æ-–ú–∏–Ω—Ç")
async def handle_moko_mint_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/q_myW75MyQM"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/mint.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–õ–∞—Ç—Ç–µ –•–∞–ª–≤–∞")
async def handle_xalva_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/egBGKZq9Y-s"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/xalva.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π –†–∞—Ñ")
async def handle_lavanda_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/HbS9ERu0rfY"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/lavanda.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–õ–∞—Ç—Ç–µ –§–∏—Å—Ç–∞—à–∫–∞")
async def handle_fistash_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/q6e2BPQ8h94"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/fistash.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# https://disk.yandex.ru/d/ayyLe_-Z04b6hw
@dp.message_handler(lambda message: message.text == "–ó–∞–≥–æ—Ç–æ–≤–∫–∏ üî™")
async def handle_brew(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("–ë–∞—Ç—á-–ë—Ä—é")], 
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "–ë–∞—Ç—á-–ë—Ä—é")
async def handle_brew_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/u7oLAs4ZAUU"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/brew.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

#...........................................................................................................
@dp.message_handler(lambda message: message.text == "–ß–∞–π üçµ")
async def handle_tea(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("–ú–∞—Ç—á–∞üçµ"),types.KeyboardButton('–ß–∞–π —Å –æ–±–ª–µ–ø–∏—Ö–æ–πüçµ')],
            [types.KeyboardButton("–ß–∞–π —Å –∏–º–±–∏—Ä—ë–ºüçµ"),types.KeyboardButton('–Ø–≥–æ–¥–Ω—ã–π —á–∞–π üçµ')],
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "–ú–∞—Ç—á–∞üçµ")
async def handle_matcha_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/JC7F-Q6JD3k"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/matcha.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–ß–∞–π —Å –∏–º–±–∏—Ä—ë–ºüçµ")
async def handle_imbir_button(message: types.Message, state: FSMContext):
    youtube_link = "https://www.youtube.com/shorts/7Q7gi1zXUOI"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/imbir.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–ß–∞–π —Å –æ–±–ª–µ–ø–∏—Ö–æ–πüçµ")
async def handle_oblepixa_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtube.com/shorts/rvIZ7n1rAR8?feature=share"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/oblipixa.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


@dp.message_handler(lambda message: message.text == "–Ø–≥–æ–¥–Ω—ã–π —á–∞–π üçµ")
async def handle_yagoda_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtube.com/shorts/xrebdZZalcg"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/yagoda.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "–ù–∞–ø–∏—Ç–∫–∏ üßã")
async def handle_drink(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("–ú–∏–ª–∫-–®–µ–π–∫ü•§")],
            [types.KeyboardButton("–ö–∞–∫–∞–æü•§"), types.KeyboardButton("–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ü•§")],
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "–ú–∏–ª–∫-–®–µ–π–∫ü•§")
async def handle_milk_sheyk_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtube.com/shorts/KVeAO3e___8?feature=share"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/mill_sheyk.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "–ö–∞–∫–∞–æü•§")
async def handle_kakao_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/PexPz8E8hDY"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/kakao.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ü•§")
async def handle_hot_ch_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/n2WhuzwKQ5o"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/hot_ch.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /coffee
@dp.message_handler(lambda message: message.text == "–ö–æ—Ñ–µ ü•§")
async def handle_coffee(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("‚òïÔ∏è –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ñ–µ")],
            [types.KeyboardButton("üç≠ –°–ª–∞–¥–∫–∏–π –∫–æ—Ñ–µ"), types.KeyboardButton("‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ñ–µ")],
            [back_button]
        ],
        resize_keyboard=True
    ))

#...........................................................................................................
@dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ñ–µ")
async def handle_winter_coffee(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –•–æ–ª–æ–¥–Ω–æ–≥–æ –∫–æ—Ñ–µ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton('‚ùÑÔ∏è–ê–π—Å –∞–º–µ—Ä–∏–∫–∞–Ω–æ'), types.KeyboardButton('‚ùÑÔ∏è–ê–π—Å –∫–∞–ø—É—á–∏–Ω–æ')],
            [types.KeyboardButton('‚ùÑÔ∏è–§—Ä–∞–ø–µ—Ç—Ç–æ'), types.KeyboardButton('‚ùÑÔ∏è–ë–∞–º–±–ª')],
            [back_button]    
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ê–π—Å –∞–º–µ—Ä–∏–∫–∞–Ω–æ")
async def handle_w_amer_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/xtCYsZxckg8"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/w_amer.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ê–π—Å –∫–∞–ø—É—á–∏–Ω–æ")
async def handle_w_cap_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/CozXgD-qW-kC"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/w_cap.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–§—Ä–∞–ø–µ—Ç—Ç–æ")
async def handle_babl_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtube.com/shorts/NQaV7OdwDAw?feature=share"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/frapp.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ë–∞–º–±–ª")
async def handle_frapp_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/ppuR8dzrLh4"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/babl.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)
#...........................................................................................................
@dp.message_handler(lambda message: message.text == "üç≠ –°–ª–∞–¥–∫–∏–π –∫–æ—Ñ–µ")
async def handle_coffee(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("–†–∞—Ñ –ö–æ—Ñ–µ ‚òïÔ∏è"),types.KeyboardButton("Caffelito Coffee ‚òïÔ∏è")],
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "–†–∞—Ñ –ö–æ—Ñ–µ ‚òïÔ∏è")
async def handle_raf_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/20g32gpy-0Y?si=N7-bvqKX8lgFK9eX"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/raf.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "Caffelito Coffee ‚òïÔ∏è")
async def handle_caffelito_coffee_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/vATxA08UDS4"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/caffelito.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

        
@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ñ–µ")
async def handle_classic_coffee(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton("‚òïÔ∏è –≠—Å–ø—Ä–µ—Å—Å–æ"),  types.KeyboardButton("‚òïÔ∏è –ê–º–µ—Ä–∏–∫–∞–Ω–æ")],
            [types.KeyboardButton("‚òïÔ∏è –õ–∞—Ç—Ç–µ"), types.KeyboardButton("‚òïÔ∏è –ö–∞–ø—É—á–∏–Ω–æ")],
            [types.KeyboardButton("‚òïÔ∏è –§–ª—ç—Ç –£–∞–π—Ç")],
            [back_button]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –≠—Å–ø—Ä–µ—Å—Å–æ")
async def handle_espresso_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/px-REaMkO_s"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/espresso.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)
@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ê–º–µ—Ä–∏–∫–∞–Ω–æ")
async def handle_amer_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/mvuG4avwINUK"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/amer.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –õ–∞—Ç—Ç–µ")
async def handle_lat_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/2Y3vzCQ24VI"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/lat.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ö–∞–ø—É—á–∏–Ω–æ")
async def handle_cap_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/adeaYdMmBUw?si=a3zP_jhpu4QHJXpm"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/cap.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

@dp.message_handler(lambda message: message.text == "‚òïÔ∏è –§–ª—ç—Ç –£–∞–π—Ç")
async def handle_flet_button(message: types.Message, state: FSMContext):
    youtube_link = "https://youtu.be/F68bKcfT2Ig"
    inline_keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
    )
    with open('assets/images/start/photo/flet.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

keep_alive()
if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)

# import logging
# from aiogram.dispatcher import FSMContext
# from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
# from aiogram import Bot, Dispatcher, types
# from aiogram.contrib.fsm_storage.memory import MemoryStorage

# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
# bot = Bot(token='6563314132:AAHTY0d7bfk-FmR2aj9dnOGi9Dpt-iwE3Gg')
# storage = MemoryStorage()
# dp = Dispatcher(bot, storage=storage)
# logging.basicConfig(level=logging.INFO)

# # –°–æ–∑–¥–∞–µ–º –æ–±—â—É—é –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"
# back_button = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
# back_button2 = types.KeyboardButton("–ù–∞–∑–∞–¥")


# # @dp.message_handler(lambda message: message.text in ["–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"], state="*")
# # async def handle_back(message: types.Message, state: FSMContext):
# #     await state.finish()  # Reset the state to None
# #     await start(message, state)

# # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# @dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è", state="*")
# async def handle_back(message: types.Message, state: FSMContext):
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
#     await state.finish()  # Reset the state to None
#     await handle_menu(message)

# @dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥", state="*")
# async def handle_back2(message: types.Message, state: FSMContext):
#     await state.finish()  # Reset the state to None
#     await start(message)
# # –°–ø–∏—Å–æ–∫ chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
# admin_chat_ids = [5378126237, 5773503802, 141839443, 6715652826, 1692177453]

# # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
# def has_access(message: types.Message):
#     return message.from_user.id in admin_chat_ids

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# @dp.message_handler(commands=['start'], state='*')
# async def start(message: types.Message, state: FSMContext):
#     # await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
#     if has_access(message):
#         # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏
#         with open('assets/images/start/start.jpg', 'rb') as photo:
#             await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="""<b>–ü—Ä–∏–≤–µ—Ç !\n–£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ ? –Ø –ë–û–¢-–ü–û–ú–û–©–ù–ò–ö. –ü–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –Ω–∞–ø–∏—Ç–∫–∞ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –≤–∏–¥–µ–æ.</b>üôå""",
#                                  parse_mode='HTML', reply_markup=types.ReplyKeyboardMarkup(
#                 keyboard=[
#                     [types.KeyboardButton("–ú–µ–Ω—é")],
#                     [types.KeyboardButton("–°–≤–µ–∂–µ–æ–±–∂–∞—Ä–µ–Ω–Ω—ã–π –∫–æ—Ñ–µ"), types.KeyboardButton("–†–µ—Ü–µ–ø—Ç—ã —Å—ç–Ω–¥–≤–∏—á–µ–π")],
#                     [types.KeyboardButton("–Ø –±–∞—Ä–∏—Å—Ç–∞")]
#                 ],
#                 resize_keyboard=True
#             ))
#     else:
#         # –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
#         await bot.send_message(chat_id=message.chat.id, text="<b>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</b>",parse_mode='HTML')

# @dp.message_handler(lambda message: message.text == "–Ø –±–∞—Ä–∏—Å—Ç–∞")
# async def handle_barista_menu(message: types.Message):
#    await message.answer('https://disk.yandex.ru/d/ayyLe_-Z04b6hw')



# @dp.message_handler(lambda message: message.text == "–ú–µ–Ω—é")
# async def handle_menu(message: types.Message):
#     with open('assets/images/start/start.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é !",
#                              parse_mode='HTML', reply_markup=types.ReplyKeyboardMarkup(
#             keyboard=[
#                 [types.KeyboardButton("–ö–æ—Ñ–µ ü•§"), types.KeyboardButton("–ù–∞–ø–∏—Ç–∫–∏ üßã"), types.KeyboardButton("–ß–∞–π üçµ")],
#                 [types.KeyboardButton("–ó–∞–≥–æ—Ç–æ–≤–∫–∏ üî™"), types.KeyboardButton("–°–µ–∑–æ–Ω–Ω–æ–µ –º–µ–Ω—é üî•")],
#                 [back_button2]
#             ],
#             resize_keyboard=True
#         ))

# @dp.message_handler(lambda message: message.text == "–°–µ–∑–æ–Ω–Ω–æ–µ –º–µ–Ω—é üî•")
# async def handle_sezon_menu(message: types.Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("–ú–æ–∫–∫–æ-–ú–∏–Ω—Ç"),types.KeyboardButton("–õ–∞—Ç—Ç–µ –•–∞–ª–≤–∞")],
#             [types.KeyboardButton("–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π –†–∞—Ñ"),types.KeyboardButton("–õ–∞—Ç—Ç–µ –§–∏—Å—Ç–∞—à–∫–∞")],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "–ú–æ–∫–∫–æ-–ú–∏–Ω—Ç")
# async def handle_moko_mint_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/q_myW75MyQM"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/mint.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–õ–∞—Ç—Ç–µ –•–∞–ª–≤–∞")
# async def handle_xalva_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/egBGKZq9Y-s"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/xalva.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π –†–∞—Ñ")
# async def handle_lavanda_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/HbS9ERu0rfY"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/lavanda.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–õ–∞—Ç—Ç–µ –§–∏—Å—Ç–∞—à–∫–∞")
# async def handle_fistash_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/q6e2BPQ8h94"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/fistash.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# # https://disk.yandex.ru/d/ayyLe_-Z04b6hw
# @dp.message_handler(lambda message: message.text == "–ó–∞–≥–æ—Ç–æ–≤–∫–∏ üî™")
# async def handle_brew(message: types.Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("–ë–∞—Ç—á-–ë—Ä—é")], 
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "–ë–∞—Ç—á-–ë—Ä—é")
# async def handle_brew_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/u7oLAs4ZAUU"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/brew.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# #...........................................................................................................
# @dp.message_handler(lambda message: message.text == "–ß–∞–π üçµ")
# async def handle_tea(message: types.Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("–ú–∞—Ç—á–∞üçµ"),types.KeyboardButton('–ß–∞–π —Å –æ–±–ª–µ–ø–∏—Ö–æ–πüçµ')],
#             [types.KeyboardButton("–ß–∞–π —Å –∏–º–±–∏—Ä—ë–ºüçµ"),types.KeyboardButton('–Ø–≥–æ–¥–Ω—ã–π —á–∞–π üçµ')],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "–ú–∞—Ç—á–∞üçµ")
# async def handle_matcha_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/JC7F-Q6JD3k"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/matcha.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–ß–∞–π —Å –∏–º–±–∏—Ä—ë–ºüçµ")
# async def handle_imbir_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://www.youtube.com/shorts/7Q7gi1zXUOI"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/imbir.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–ß–∞–π —Å –æ–±–ª–µ–ø–∏—Ö–æ–πüçµ")
# async def handle_oblepixa_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtube.com/shorts/rvIZ7n1rAR8?feature=share"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/oblipixa.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# @dp.message_handler(lambda message: message.text == "–Ø–≥–æ–¥–Ω—ã–π —á–∞–π üçµ")
# async def handle_yagoda_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtube.com/shorts/xrebdZZalcg"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/yagoda.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "–ù–∞–ø–∏—Ç–∫–∏ üßã")
# async def handle_drink(message: types.Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ù–∞–ø–∏—Ç–∫–∞ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("–ú–∏–ª–∫-–®–µ–π–∫ü•§")],
#             [types.KeyboardButton("–ö–∞–∫–∞–æü•§"), types.KeyboardButton("–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ü•§")],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "–ú–∏–ª–∫-–®–µ–π–∫ü•§")
# async def handle_milk_sheyk_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtube.com/shorts/KVeAO3e___8?feature=share"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/mill_sheyk.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "–ö–∞–∫–∞–æü•§")
# async def handle_kakao_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/PexPz8E8hDY"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/kakao.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ü•§")
# async def handle_hot_ch_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/n2WhuzwKQ5o"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/hot_ch.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)


# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /coffee
# @dp.message_handler(lambda message: message.text == "–ö–æ—Ñ–µ ü•§")
# async def handle_coffee(message: types.Message):
#     await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("‚òïÔ∏è –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ñ–µ")],
#             [types.KeyboardButton("üç≠ –°–ª–∞–¥–∫–∏–π –∫–æ—Ñ–µ"), types.KeyboardButton("‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ñ–µ")],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# #...........................................................................................................
# @dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ñ–µ")
# async def handle_winter_coffee(message: types.Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –•–æ–ª–æ–¥–Ω–æ–≥–æ –∫–æ—Ñ–µ üëáüèª', reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton('‚ùÑÔ∏è–ê–π—Å –∞–º–µ—Ä–∏–∫–∞–Ω–æ'), types.KeyboardButton('‚ùÑÔ∏è–ê–π—Å –∫–∞–ø—É—á–∏–Ω–æ')],
#             [types.KeyboardButton('‚ùÑÔ∏è–§—Ä–∞–ø–µ—Ç—Ç–æ'), types.KeyboardButton('‚ùÑÔ∏è–ë–∞–º–±–ª')],
#             [back_button]    
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ê–π—Å –∞–º–µ—Ä–∏–∫–∞–Ω–æ")
# async def handle_w_amer_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/xtCYsZxckg8"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/w_amer.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ê–π—Å –∫–∞–ø—É—á–∏–Ω–æ")
# async def handle_w_cap_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/CozXgD-qW-kC"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/w_cap.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–§—Ä–∞–ø–µ—Ç—Ç–æ")
# async def handle_babl_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtube.com/shorts/NQaV7OdwDAw?feature=share"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/frapp.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚ùÑÔ∏è–ë–∞–º–±–ª")
# async def handle_frapp_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/ppuR8dzrLh4"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/babl.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)
# #...........................................................................................................
# @dp.message_handler(lambda message: message.text == "üç≠ –°–ª–∞–¥–∫–∏–π –∫–æ—Ñ–µ")
# async def handle_coffee(message: types.Message):
#     await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("–†–∞—Ñ –ö–æ—Ñ–µ ‚òïÔ∏è"),types.KeyboardButton("Caffelito Coffee ‚òïÔ∏è")],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "–†–∞—Ñ –ö–æ—Ñ–µ ‚òïÔ∏è")
# async def handle_raf_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/20g32gpy-0Y?si=N7-bvqKX8lgFK9eX"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/raf.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "Caffelito Coffee ‚òïÔ∏è")
# async def handle_caffelito_coffee_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/vATxA08UDS4"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/caffelito.png', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

        
# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ñ–µ")
# async def handle_classic_coffee(message: types.Message):
#     await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Ñ–µ:", reply_markup=types.ReplyKeyboardMarkup(
#         keyboard=[
#             [types.KeyboardButton("‚òïÔ∏è –≠—Å–ø—Ä–µ—Å—Å–æ"),  types.KeyboardButton("‚òïÔ∏è –ê–º–µ—Ä–∏–∫–∞–Ω–æ")],
#             [types.KeyboardButton("‚òïÔ∏è –õ–∞—Ç—Ç–µ"), types.KeyboardButton("‚òïÔ∏è –ö–∞–ø—É—á–∏–Ω–æ")],
#             [types.KeyboardButton("‚òïÔ∏è –§–ª—ç—Ç –£–∞–π—Ç")],
#             [back_button]
#         ],
#         resize_keyboard=True
#     ))

# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –≠—Å–ø—Ä–µ—Å—Å–æ")
# async def handle_espresso_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/px-REaMkO_s"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/espresso.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)
# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ê–º–µ—Ä–∏–∫–∞–Ω–æ")
# async def handle_amer_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/mvuG4avwINUK"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/amer.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –õ–∞—Ç—Ç–µ")
# async def handle_lat_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/2Y3vzCQ24VI"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/lat.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –ö–∞–ø—É—á–∏–Ω–æ")
# async def handle_cap_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/adeaYdMmBUw?si=a3zP_jhpu4QHJXpm"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/cap.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# @dp.message_handler(lambda message: message.text == "‚òïÔ∏è –§–ª—ç—Ç –£–∞–π—Ç")
# async def handle_flet_button(message: types.Message, state: FSMContext):
#     youtube_link = "https://youtu.be/F68bKcfT2Ig"
#     inline_keyboard = InlineKeyboardMarkup().add(
#         InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ç—É—Ç üëáüèª", url=youtube_link)
#     )
#     with open('assets/images/start/photo/flet.jpg', 'rb') as photo:
#         await bot.send_photo(chat_id=message.chat.id, photo=photo, reply_markup=inline_keyboard)

# if __name__ == '__main__':
#     from aiogram import executor
#     executor.start_polling(dp, skip_updates=True)





